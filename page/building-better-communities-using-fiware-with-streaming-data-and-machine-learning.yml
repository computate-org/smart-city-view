---
pageId: "building-better-communities-using-fiware-with-streaming-data-and-machine-learning"
uri: "/en-us/{{ pageId }}"
url: "{{ page.siteBaseUrl }}{{ uri }}"
h1: "Building better communities using FIWARE with streaming data and machine learning"
h2: "The latest standards powering our open source smart village project underway at the Red Hat Collaboratory"
created: "2022-11-15"
courseNum: 1
lessonNum: 7
author:
  name: Christopher Tate
  title: Red Hat Principal Software Consultant
pageImageUri: "/png/{{ pageId }}/infographic.png"
htmTitle:
  - text: "{{ h1 }}{{ h2 }}"
htmMeta:
  - {e: meta, a: {property: "og:title", content: "{{ h1 }}"}}
  - {e: meta, a: {property: "og:description", content: "{{ h2 }}"}}
  - {e: meta, a: {property: "og:url", content: "{{ page.siteBaseUrl }}{{ uri }}"}}
  - {e: meta, a: {property: "og:site_name", content: "{{ page.siteName }}"}}
  - {e: meta, a: {property: "og:image", content: "{{ page.staticBaseUrl }}{{ pageImageUri }}"}}
  - comment: |
      CutyCapt --min-height=1 --url='{{ page.siteBaseUrl }}{{ uri }}?var=filterLabel:infographic' --out='{{ page.staticPath }}/png/{{ pageId }}/infographic.png'
      CutyCapt --min-height=1 --url='{{ page.siteBaseUrl }}{{ uri }}?var=filterLabel:review' --out='{{ page.staticPath }}/png/{{ pageId }}/review.png'
      CutyCapt --min-height=1 --url='{{ page.siteBaseUrl }}{{ uri }}?var=filterLabel:image' --out='{{ page.staticPath }}/png/{{ pageId }}/image.png'
  - {e: meta, a: {property: "og:image:width", content: "{{ page.pageImageWidth }}"}}
  - {e: meta, a: {property: "og:image:height", content: "{{ page.pageImageHeight }}"}}
  - {e: meta, a: {property: "og:image:type", content: "{{ page.pageImageType }}"}}
  - {e: meta, a: {property: "og:image:alt", content: "{{ h1 }} {{ h2 }}"}}
  - {e: meta, a: {property: "og:type", content: "article"}}
  - {e: meta, a: {property: "twitter:card", content: "summary_large_image"}}
  - {e: meta, a: {property: "twitter:title", content: "{{ h1 }}"}}
  - {e: meta, a: {property: "twitter:description", content: "{{ h2 }}"}}
  - {e: meta, a: {property: "twitter:image", content: "{{ page.staticBaseUrl }}{{ pageImageUri }}"}}
  - {e: meta, a: {property: "description", content: "{{ h2 }}"}}
htmBody:
- e: div
  a:
    class: w3-card w3-padding w3-margin-top w3-show w3-white 
  in:
  - e: div
    in:
      - e: h1
        a:
          class: ""
        in:
          - e: i
            a:
              class: fa-solid fa-car-building padding-right-quarter-em
          - e: span
            text: "{{ h1 }}"
      - e: h2
        a:
          class: ""
        in:
          - e: i
            a:
              class: fa-brands fa-redhat w3-text-red padding-right-quarter-em
          - e: span
            text: "{{ h2 }}"
      - e: div
        a:
          class: font-style-italic 
        text: 'Created {{formatZonedDateTime created "EEE MMM d yyyy" "en-US" "America/Denver" }}'
      - e: p
        in:
          - e: div
            a:
              class: font-weight-bold 
            text: "By {{ author.name }}"
          - e: div
            a:
              class: font-weight-bold font-style-italic
            in:
              - e: i
                a:
                  class: fa-brands fa-redhat w3-text-red
              - e: span
                a:
                  class: font-weight-bold 
                text: "{{ author.title }}"
      - e: div
        a:
          class: w3-row w3-mobile 
        label: 
          - infographic
          - image
        in:
      - e: div
        a:
          class: w3-row w3-mobile 
        label: 
          - infographic
          - image
        in:
          - e: img
            a:
              class: w3-image 
              src: "{{ page.staticBaseUrl }}/png/{{ pageId }}/image.png"
  - e: div
    in:
      - e: div
        a:
          class: w3-padding 
        in:
          - e: h3
            a:
              class: ""
            in:
              - e: i
                a:
                  class: fa-solid fa-mountain-city padding-right-quarter-em
              - e: span
                text: How to help communities and build a better world
          - e: h4
            a:
              class: ""
            in:
              - e: i
                a:
                  class: fa-kit fa-red-hat-impact padding-right-quarter-em w3-text-red 
              - e: span
                text: Build it together with the Red Hat Social Innovation Program
          - e: p
            in:
              - e: span
                text: |
                  Do you believe that software can help communities and build a better world, but find it challenging to get started? I don’t wait for the right software to come along, I go and help build it together. 
                  In the little town of Veberöd Sweden, new technology to build a better community is continuing to go live. 
                  The student research team at Boston University combined with Software Engineering at the Red Hat Collaboratory has achieved very visible success in Research and Development together. 
          - e: p
            in:
              - e: span
                text: |
                  The project, “
              - e: a
                href: "https://research.redhat.com/blog/research_project/creating-a-global-open-research-platform-to-better-understand-social-sustainability-using-data-from-a-real-life-smart-village/"
                text: |
                  Creating a global open research platform to better understand social sustainability using data from a real-life smart village.
              - e: span
                text: |
                  ” has come alive since December 2021. 
              - e: span
                text: |
                  Jim Craig, a product manager in Red Hat’s global public sector team, said “Almost immediately after meeting Jan Malmgren, I shared the project idea with my colleague Alexandra Machado, who leads Red Hat’s 
              - e: a
                href: "https://www.redhat.com/en/red-hat-community-and-social-responsibility-social-innovation"
                text: |
                  Social Innovation Program
              - e: span
                text: |
                  . 
                  …  Machado suggested I approach the Red Hat Research team and submit a proposal for a Collaboratory Research Incubation Award with Boston University. 
                  Adding Boston University (BU) to the ongoing collaboration between Red Hat and Smarta Byar has provided a real injection of energy, intellectual rigor, and a focus on new use cases”.
          - e: p
            in:
              - e: span
                text: |
                  The project was one of the recipients of the inaugural Red Hat Collaboratory Research Incubation Awards, awarded to projects that take advantage of the collaboration between Boston University and Red Hat Research. 
                  The Red Hat Global Social Innovation Program is partnering with Boston University and Smarta Byar in order to create a global and open research platform. 
                  This will allow researchers to study what social sustainability means by using a digital twin of Veberöd, Sweden as the test village, supported by  Smarta Byar. 
                  The goal of this collaboration is to build the open source technological infrastructure so that researchers can collaborate on this platform effectively to study mobility, public health, sustainability among other study areas to ultimately help define better the link between well being and eco-smart cities. 
          - e: p
            in:
              - e: span
                text: |
                  Since our collaboration started back in March 2022, the students of Boston University came up with simulations of a traffic stop in our test village of Veberöd. 
                  Myself from Red Hat built a scalable online platform to import the student’s simulations, and report the data in maps and dashboards. 
                  Jan from Smarta Byar helped us integrate with IOT Nodes from the village. The online platform allowed us to share our results and accomplish the goals for the project: 
          - e: p
            in:
              - e: ol
                in:
                  - e: li
                    in:
                      - e: span
                        text: |
                          Design and expand the current technological infrastructure
                  - e: li
                    in:
                      - e: span
                        text: |
                          Design and create the data visualization strategy and front end application
                  - e: li
                    in:
                      - e: span
                        text: |
                          Expand on the strategy to have this platform to be open, scalable, secure and reliable for researchers
          - e: p
            in:
              - e: span
                text: |
                  The Smarta Byar organization has been busy deploying new smart sensors in Veberöd. 
                  We have added new integration with FIWARE technology implementing their Smart Data Models to align ourselves with the rest of the open source smart solution community. 
                  The active research, development, deployment, and standards in this partnership has really moved the project forward since we started less than 1 year ago. 
          - e: p
            in:
              - e: img
                a:
                  class: w3-image 
                  src: "{{ page.staticBaseUrl }}/png/{{ pageId }}/boston-university-fiware-redhat.png"
          - e: p
            in:
              - e: span
                text: |
                  Boston University, Red Hat, and FIWARE got together at the university to meet in person and talk about next steps. 
                  Building the actual Smart Traffic Light, integrating with FIWARE, and bringing the solution to the edge. 
      - e: div
        a:
          class: w3-padding 
        in:
          - e: h3
            a:
              class: ""
            in:
              - e: i
                a:
                  class: fa-solid fa-traffic-light-stop padding-right-quarter-em
              - e: span
                text: Designing the Smart Traffic Light Algorithms
          - e: h4
            a:
              class: ""
            in:
              - e: i
                a:
                  class: fa-solid fa-building-columns padding-right-quarter-em
              - e: span
                text: at Boston University
          - e: iframe
            a:
              width: 560
              height: 315
              src: "https://www.youtube.com/embed/la7-hZ38uEg"
              title: YouTube video player
              frameborder: "0"
              allow: "accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
              allowfullscreen: ""
            in:
              - e: span
          - e: p
            in:
              - e: span
                text: |
                  Boston University students have done an incredible job simulating traffic at the first potential intersection requiring a traffic light in Veberöd. 
                  They use an open source application called 
              - e: a
                href: "https://www.eclipse.org/sumo/"
                text: |
                  SUMO 
              - e: span
                text: |
                  to pick a place on a map and load in all the road data into a directory of files for simulation. 
                  The road data did not have all the details they needed to simulate pedestrian traffic, so they used the SUMO tools to add those sidewalks. 
                  The default traffic light algorithm proved to be inefficient, so they put their advanced science background to work to develop a new traffic pattern that optimized the traffic flow in all directions for both vehicles and people traffic. 
                  The new simulation works very efficiently as you can see in the simulation above, where the cars are orange dots, the pedestrians are purple dots, and the traffic light turns from green to red over time. 
      - e: div
        a:
          class: w3-padding 
        in:
          - e: h3
            a:
              class: ""
            in:
              - e: i
                a:
                  class: fa-solid fa-up-right-from-square padding-right-quarter-em
              - e: span
                text: Building a scalable application 
          - e: h4
            a:
              class: ""
            in:
              - e: i
                a:
                  class: fa-kit fa-openshift padding-right-quarter-em w3-text-red 
              - e: span
                text: on Red Hat OpenShift
          - e: p
            in:
              - e: span
                text: |
                  To be able to share the project online, and provide role-based access control to the traffic and IOT data, I have put together the software we came up with at the beginning of the project. 
                  OpenAPIs for smart cities with use cases to do the following: 
          - e: p
            in:
              - e: ul
                in:
                  - e: li
                    in:
                      - e: span
                        text: |
                          Interact with external services to gather live data
                  - e: li
                    in:
                      - e: span
                        text: |
                          Interact with open source applications to simulate traffic
                  - e: li
                    in:
                      - e: span
                        text: |
                          Help University students study smart city indicators
          - e: p
            in:
              - e: span
                text: |
                  The site, which you can find running live in production here at 
              - e: a
                href: "https://smartvillage.computate.org/"
                text: |
                  smartvillage.computate.org 
              - e: span
                text: |
                  has everything an innovative project running in the cloud deserves, security, high availability, scalability, updates, storage and more. 
                  The site is deployed on the 
              - e: a
                href: "https://www.operate-first.cloud/"
                text: |
                  Operate First 
              - e: span
                text: |
                  environment. 
                  It’s an open source community cloud where maintainers come use environments to develop, deploy, and operate their services in an open fashion on Red Hat OpenShift. 
          - e: p
            in:
              - e: span
                text: |
                  As a brand new open source project growing in maturity, we are integrating our project with the 
              - e: a
                href: "https://bestpractices.coreinfrastructure.org/en"
                text: |
                  Open Source Software Foundation standards for obtaining a Best Practices Badge. 
              - e: span
                text: |
                  We hope to build a community around smart cities that can thrive by observing all the standards in our project around documentation, change control, reporting, quality, security, and analysis. 
                  I’m pleased to announce that our latest stable version 1.0.1 of the smartabyar-smartvillage project is now available in the following community locations: 
          - e: p
            in:
              - e: ul
                in:
                  - e: li
                    in:
                      - e: a
                        href: "https://github.com/computate-org/smartabyar-smartvillage/releases"
                        text: |
                          See the latest smartabyar-smartvillage releases tag in GitHub here
                  - e: li
                    in:
                      - e: a
                        href: "https://quay.io/repository/computateorg/smartabyar-smartvillage?tab=tags"
                        text: |
                          See the latest smartabyar-smartvillage container image on quay.io
                  - e: li
                    in:
                      - e: a
                        href: "https://mvnrepository.com/artifact/org.computate/smartabyar-smartvillage"
                        text: |
                          See the latest smartabyar-smartvillage Maven artifacts in Maven Central
                  - e: li
                    in:
                      - e: a
                        href: "https://javadoc.io/doc/org.computate/smartabyar-smartvillage/latest/index.html"
                        text: |
                          See the latest smartabyar-smartvillage Javadocs
      - e: div
        a:
          class: w3-padding 
        in:
          - e: h3
            a:
              class: ""
            in:
              - e: i
                a:
                  class: fa-solid fa-tree-city padding-right-quarter-em
              - e: span
                text: Building Smart Cities technology 
          - e: h4
            a:
              class: ""
            in:
              - e: i
                a:
                  class: fa-solid fa-code padding-right-quarter-em
              - e: span
                text: together with FIWARE
          - e: p
            in:
              - e: span
                text: |
                  Since our meeting at Boston University with Juanjo Hierro, the CTO at FIWARE, we have been busy collaborating with FIWARE and building compatibility into our Smarta Byar Smart Village Project with the rest of the FIWARE community. 
                  Starting with the 
              - e: a
                href: "https://fiware-requirements.readthedocs.io/en/latest/"
                text: |
                  FIWARE Generic Enabler General Requirements
              - e: span
                text: |
                  , we have successfully integrated the following support for FIWARE: 
          - e: p
            in:
              - e: div
                class: font-weight-bold 
                text: |
                  Deployment of an NGSI-LD context broker on OpenShift
              - e: div
                in:
                  - e: span
                    text: |
                      Earlier in 2022, the Red Hat Social Innovation Program brought the talented Red Hat Open Innovation Labs together with FIWARE for a 6 week residency and deployed a comprehensive FIWARE ecosystem on OpenShift for the first time. 
                      You can find the press release 
                  - e: a
                    href: "https://www.redhat.com/en/success-stories/fiware"
                    text: |
                      FIWARE powers eco-smart cities in collaboration with the Red Hat Social Innovation Program here
                  - e: span
                    text: |
                      . 
                      Since that residency, I had the pleasure of meeting participants from the Open Innovation Labs team, as well as the collaborators from the FIWARE and HOPU teams at the FIWARE Summit in Gran Canaria, Spain. 
                      I heard their story and was thrilled to hear about the GitOps they have shared with the open source community to deploy the context broker on OpenShift. 
                      After coming home from the conference, I couldn’t wait to try it out on my own 
                  - e: a
                    href: "https://developers.redhat.com/products/openshift-local/overview"
                    text: |
                      OpenShift Local 
                  - e: span
                      environment. 
                      Building on the great work already done during the residency, I was able to take even more GitOps capabilities I have learned working on the Red Hat Research Engineering Team and contribute it to the FIWARE community. 
                      My pull request was recently merged upstream to 
                  - e: a
                    href: "https://github.com/FIWARE-Ops/marinera/pull/151"
                    text: |
                      add Kubernetes Native Configuration Management (kustomize.io) scripts 
                  - e: span
                      and make deployment of a FIWARE context broker even easier in your own OpenShift environment. 
          - e: p
            in:
              - e: div
                class: font-weight-bold 
                text: |
                  Integration with an NGSI-LD context broker
              - e: div
                in:
                  - e: span
                    text: |
                      Our application now publishes data into the 
                  - e: a
                    href: "https://github.com/FIWARE/context.Orion-LD"
                    text: |
                      Orion Context Broker with Linked Data Extensions, 
                  - e: span
                    text: |
                      an application supporting the NGSI-LD standard for open exchange of structured data for smart cities. 
                      This is an exciting opportunity that enables our application to join the rest of the vast 
                  - e: a
                    href: "https://www.fiware.org/marketplace/"
                    text: |
                      FIWARE Marketplace
                  - e: span
                      . 
                      I learned about the FIWARE Marketplace and the strong community of FIWARE Innovation Hubs and partners while attending the FIWARE Summit. 
                      Building with the FIWARE context broker means that we can combine our data with the rest of the FIWARE Marketplace applications to discover new ways to visualize our data. 
          - e: p
            in:
              - e: div
                class: font-weight-bold 
                text: |
                  Building with FIWARE Smart Data Models
              - e: div
                in:
                  - e: span
                    text: |
                      When you are not yet familiar with the API of a FIWARE Context Broker, the best place I found to understand it better was studying the 
                  - e: a
                    href: "https://www.fiware.org/smart-data-models/"
                    text: |
                      FIWARE Smart Data Models. 
                  - e: span
                      There are models available in a dozen current domains including smart cities, agrifood, water, energy, environment, sensoring, aeronautics, destination, robotics, health, manufacturing, and cross sector. 
                      If you are building smart solutions as well, you are likely to find that your data matches one of the colossal 795 defined data models combined in all of these domains! The FIWARE Context Broker supports all of these data models, which is why our project is now powered by a FIWARE Context Broker. 
          - e: p
            in:
              - e: span
                text: |
                  Now that we have aligned ourselves with the latest standards in open source IoT Technology and the cloud, we want to bring this simulated technology into the physical world. 
                  We have submitted a renewal proposal for our project 
              - e: a
                href: "https://research.redhat.com/blog/research_project/creating-a-global-open-research-platform-to-better-understand-social-sustainability-using-data-from-a-real-life-smart-village/"
                text: |
                  “Creating a global open research platform to better understand social sustainability using data from a real-life smart village.” 
              - e: span
                text: |
                  Next year and beyond, together with Smarta Byar in the village of Veberöd, we plan to extend our technology and traffic light algorithms all the way to the edge, with an actual smart traffic light in the village. 
                  We want to prove that open source technology and open collaboration can bring about real change and happiness in the village. 
                  Look forward to more updates on the Smarta Byar Smart Village project in the future! 
  - e: div
    label:
      - infographic
      - review
    a:
      id: divReview
    in:
      - e: table
        a:
          id: tableReview1
          class: review1Table 
        in:
          - e: tbody
            in:
              - e: tr
                a:
                  class: 
                in:
                  - e: td
                    a:
                      class: w3-mobile review1TableTr1Td1 review1TableTr1Td even 
                    in:
                      - e: span
                        text: '{{formatZonedDateTime created "EEEE" "en-US" "America/Denver" }}'
                  - e: td
                    a:
                      class: w3-mobile review1TableTr1Td2 review1TableTr1Td odd 
                    in:
                      - e: i
                        a:
                          class: "{{ htmBody.0.in.0.in.0.in.0.a.class }}"
                  - e: td
                    a:
                      class: w3-mobile review1TableTr1Td3 review1TableTr1Td even 
                    in:
                      - e: i
                        a:
                          class: "{{ htmBody.0.in.0.in.1.in.0.a.class }}"
                  - e: td
                    a:
                      class: w3-mobile review1TableTr1Td4 review1TableTr1Td odd 
                    in:
                      - e: i
                        a:
                          class: "fa-solid fa-pen-nib"
              - e: tr
                a:
                  class: odd 
                in:
                  - e: td
                    a:
                      class: w3-mobile review1TableTr2Td1 review1TableTr2Td even 
                    in:
                      - e: span
                        text: '{{formatZonedDateTime created "MMMM d yyyy" "en-US" "America/Denver" }}'
                  - e: td
                    a:
                      class: w3-mobile review1TableTr2Td2 review1TableTr2Td odd 
                    in:
                      - e: span
                        text: "{{ h1 }}"
                  - e: td
                    a:
                      class: w3-mobile review1TableTr2Td3 review1TableTr2Td even 
                    in:
                      - e: span
                        text: "{{ h2 }}"
                  - e: td
                    a:
                      class: w3-mobile review1TableTr2Td4 review1TableTr2Td odd 
                    in:
                      - e: span
                        text: "{{ author.name }}"
      - e: table
        a:
          id: tableReview2
          class: review2Table 
        in:
          - e: tbody
            each: htmBody.0.in.1.in
            in:
              - e: tr
                a:
                  class: "{{#even @index }}review2TableTr even {{else}}review2TableTr odd {{/even}}"
                in:
                  - e: td
                    a:
                      class: w3-mobile 
                    in:
                      - e: i
                        a:
                          class: "{{ item.in.0.in.0.a.class }}"
                      - e: span
                        text: '{{ item.in.0.in.1.text }}'
                  - e: td
                    a:
                      class: w3-mobile 
                    in:
                      - e: i
                        a:
                          class: "{{ item.in.1.in.0.a.class }}"
                      - e: span
                        text: '{{ item.in.1.in.1.text }}'
