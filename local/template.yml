---
SITE_NAME: "{{ SITE_NAME }}"
SITE_SRC: "{{ SITE_SRC }}"
SITE_DISPLAY_NAME: "{{ SITE_DISPLAY_NAME }}"
SITE_POM_GROUP_ID: "{{ SITE_POM_GROUP_ID }}"
SITE_PUBLIC_URL: "{{ SITE_PUBLIC_URL }}"
GITHUB_ORG: "{{ GITHUB_ORG }}"
QUAYIO_ORG: "{{ QUAYIO_ORG }}"
SITE_POWERED_BY_URL: "{{ SITE_POWERED_BY_URL }}"
SITE_POWERED_BY_NAME: "{{ SITE_POWERED_BY_NAME }}"
SITE_POWERED_BY_IMAGE_URI: "{{ SITE_POWERED_BY_NAME }}"

LANGUAGE_NAME: "{{ LANGUAGE_NAME }}"
SITE_PATH_enUS: "{{ SITE_SRC }}"
SITE_HOST_NAME: "{{ SITE_HOST_NAME }}"
SITE_PORT: {{ SITE_PORT }}
SITE_BASE_URL: "{{ SITE_BASE_URL }}"
SITE_ZONE: "{{ SITE_ZONE }}"
SITE_LOCALE: "{{ SITE_LOCALE }}"
DOMAIN_NAME: "{{ DOMAIN_NAME }}"
DOMAIN_PACKAGE_NAME: "{{ SITE_JAVA_PACKAGE }}"
SUFFIX_SRC_MAIN_JAVA: "{{ SUFFIX_SRC_MAIN_JAVA }}"
SUFFIX_SRC_GEN_JAVA: "{{ SUFFIX_SRC_GEN_JAVA }}"
RELATIVE_PATHS_TO_WATCH: "{{ RELATIVE_PATHS_TO_WATCH }}"
STATIC_BASE_URL: "{{ STATIC_BASE_URL }}"
STATIC_PATH: "{{ STATIC_PATH }}"
TEMPLATE_PATH: "{{ TEMPLATE_PATH }}"
FONTAWESOME_KIT: "{{ FONTAWESOME_KIT }}"
I18N_PATHS: {{ I18N_PATHS | to_json }}
DYNAMIC_PAGE_PATHS:
  - "{{ SITE_SRC }}/page"
SSL_VERIFY: false

JDBC_HOST: "{{ JDBC_HOST }}"
JDBC_PORT: {{ JDBC_PORT }}
JDBC_DATABASE: "{{ JDBC_DATABASE }}"
JDBC_USERNAME: "{{ JDBC_USERNAME }}"
# oc get -n smartvillage secret/postgres-pguser-smartvillage -o 'jsonpath={.data.password}' | base64 -d && echo
JDBC_PASSWORD: "{{ JDBC_PASSWORD }}"

KAFKA_BROKERS: "{{ KAFKA_BROKERS }}"
KAFKA_GROUP: "smartvillage-kafka-group"
KAFKA_SECURITY_PROTOCOL: "{{ KAFKA_SECURITY_PROTOCOL }}"
KAFKA_SSL_KEYSTORE_TYPE: "{{ KAFKA_SSL_KEYSTORE_TYPE }}"
# oc extract -n smartvillage secret/smartvillage-kafka --to=$HOME/.local/src/smartvillage-platform/config/ --keys=user.p12 --confirm
KAFKA_SSL_KEYSTORE_LOCATION: "{{ KAFKA_SSL_KEYSTORE_LOCATION }}"
# oc get -n smartvillage secret/smartvillage-kafka -o 'jsonpath={.data.user\.password}' | base64 -d && echo
KAFKA_SSL_KEYSTORE_PASSWORD: "{{ KAFKA_SSL_KEYSTORE_PASSWORD }}"
KAFKA_SSL_TRUSTSTORE_TYPE: "{{ KAFKA_SSL_TRUSTSTORE_TYPE }}"
# oc extract -n smartvillage secret/smartvillage-kafka-cluster-ca-cert --to=$HOME/.local/src/smartvillage-platform/config/ --keys=ca.p12 --confirm
KAFKA_SSL_TRUSTSTORE_LOCATION: "{{ KAFKA_SSL_TRUSTSTORE_LOCATION }}"
# oc get -n smartvillage secret/smartvillage-kafka-cluster-ca-cert -o 'jsonpath={.data.ca\.password}' | base64 -d && echo
KAFKA_SSL_TRUSTSTORE_PASSWORD: "{{ KAFKA_SSL_TRUSTSTORE_PASSWORD }}"

AUTH_HOST_NAME: "{{ AUTH_HOST_NAME | default('') }}"
AUTH_PORT: {{ AUTH_PORT }}
AUTH_SSL: {{ AUTH_SSL | lower }}
AUTH_SSL_REQUIRED: {{ AUTH_SSL_REQUIRED }}
AUTH_REALM: "{{ AUTH_REALM | default('') }}"
AUTH_CLIENT: "{{ AUTH_CLIENT | default('') }}"
AUTH_SECRET: "{{ AUTH_SECRET | default('') }}"
AUTH_URL: "{{ AUTH_URL }}"
AUTH_TOKEN_URI: "{{ AUTH_TOKEN_URI }}"

SOLR_HOST_NAME: "{{ SOLR_HOST_NAME }}"
SOLR_PORT: {{ SOLR_PORT }}
SOLR_COLLECTION: "{{ SOLR_COLLECTION }}"
SOLR_URL: "{{ SOLR_URL }}"
SOLR_URL_COMPUTATE: "{{ SOLR_URL_COMPUTATE }}"
SOLR_SSL: {{ SOLR_SSL }}

API_TITLE: "{{ SITE_NAME }}"
API_CONTACT_EMAIL: "{{ EMAIL_FROM }}"

EMAIL_HOST: {{ EMAIL_HOST }}
EMAIL_PORT: {{ EMAIL_PORT }}
EMAIL_SSL: {{ EMAIL_SSL }}
EMAIL_AUTH: {{ EMAIL_AUTH }}
EMAIL_USERNAME: {{ EMAIL_USERNAME }}
EMAIL_PASSWORD: {{ EMAIL_PASSWORD }}
EMAIL_FROM: {{ EMAIL_FROM }}
EMAIL_ADMIN: {{ EMAIL_ADMIN }}

# Enable the code generation service for the project
ENABLE_CODE_GENERATION_SERVICE: true
# Set the sessionId of the user session creating an object in the database. 
ENABLE_SESSION_ID: true
# Enable an object in the database to be deleted. 
ENABLE_DELETED: true
# Enable an object in the database to be archived. 
ENABLE_ARCHIVED: true
# Enable an admin role. 
ENABLE_ROLE_ADMIN: true
# Enable a super admin role. 
ENABLE_ROLE_SUPER_ADMIN: true
# Enable an OpenID Connect Authentication. 
ENABLE_OPENID_CONNECT: true
# Write API code into the project. 
WRITE_API: true
# Write code comments into generated code. 
WRITE_COMMENTS: true

# Enable data import in the site. 
ENABLE_IMPORT_DATA: {{ ENABLE_IMPORT_DATA | lower }}
ENABLE_IMPORT_DATA_IotNode: true
ENABLE_IMPORT_DATA_SitePage: true
ENABLE_IMPORT_DATA_SimulationReport: true
ENABLE_IMPORT_DATA_TrafficSimulation: true
ENABLE_IMPORT_DATA_TrafficLightStep: true
ENABLE_IMPORT_DATA_VehicleStep: true
ENABLE_IMPORT_DATA_PersonStep: true
ENABLE_IMPORT_DATA_TrafficLight: true
ENABLE_IMPORT_DATA_TimeStep: true
ENABLE_IMPORT_DATA_BicycleStep: true
ENABLE_IMPORT_DATA_TrafficFlowObserved: true
ENABLE_IMPORT_DATA_SmartTrafficLight: true
ENABLE_IMPORT_DATA_SystemEvent: true
ENABLE_IMPORT_DATA_SiteHtm: true
ENABLE_IMPORT_DATA_IotNodeStep: true
ENABLE_IMPORT_DATA_MapResult: true

# The Auth roles required to be an admin in the site. 
AUTH_ROLE_ADMIN: {{ AUTH_ROLE_ADMIN }}
# The Auth roles required to add and modify site user records. 
AUTH_ROLE_REQUIRED_SiteUser: 'SiteAdmin'
# The Auth roles required to add and modify IOT node records. 
AUTH_ROLE_REQUIRED_IotNode: 'SiteAdmin'
# The Auth roles required to add and modify article records. 
AUTH_ROLE_REQUIRED_SitePage: 'SiteAdmin'
# The Auth roles required to add and modify simulation report records. 
AUTH_ROLE_REQUIRED_SimulationReport: 'SiteAdmin'
# The Auth roles required to add and modify traffic simulation records. 
AUTH_ROLE_REQUIRED_TrafficSimulation: 'SiteAdmin'
# The Auth roles required to add and modify traffic light step records. 
AUTH_ROLE_REQUIRED_TrafficLightStep: 'SiteAdmin'
# The Auth roles required to add and modify vehicle step records. 
AUTH_ROLE_REQUIRED_VehicleStep: 'SiteAdmin'
# The Auth roles required to add and modify person step records. 
AUTH_ROLE_REQUIRED_PersonStep: 'SiteAdmin'
# The Auth roles required to add and modify traffic light records. 
AUTH_ROLE_REQUIRED_TrafficLight: 'SiteAdmin'
# The Auth roles required to add and modify time step records. 
AUTH_ROLE_REQUIRED_TimeStep: 'SiteAdmin'
# The Auth roles required to add and modify bicycle step records. 
AUTH_ROLE_REQUIRED_BicycleStep: 'SiteAdmin'
# The Auth roles required to add and modify traffic flow observed records. 
AUTH_ROLE_REQUIRED_TrafficFlowObserved: 'SiteAdmin'
# The Auth roles required to add and modify smart traffic light records. 
AUTH_ROLE_REQUIRED_SmartTrafficLight: 'SiteAdmin'
# The Auth roles required to add and modify system event records. 
AUTH_ROLE_REQUIRED_SystemEvent: 'SiteAdmin'
# The Auth roles required to add and modify HTML records. 
AUTH_ROLE_REQUIRED_SiteHtm: 'SiteAdmin'
# The Auth roles required to add and modify IOT node step records. 
AUTH_ROLE_REQUIRED_IotNodeStep: 'SiteAdmin'
# The Auth roles required to add and modify map result records. 
AUTH_ROLE_REQUIRED_MapResult: 'SiteAdmin'

YGGIO_HOST_NAME: "{{ YGGIO_HOST_NAME | default('') }}"
YGGIO_PORT: {{ YGGIO_PORT | default('') }}
YGGIO_SSL: {{ YGGIO_SSL | default('') | lower }}
YGGIO_USERNAME: "{{ YGGIO_USERNAME | default('') }}"
YGGIO_PASSWORD: "{{ YGGIO_PASSWORD | default('') }}"
YGGIO_API_RELATIVE_URI_IotNode: /api/iotnodes
YGGIO_AUTH_LOCAL_URI: /api/auth/local
DEFAULT_MAP_LOCATION: "55.61888,13.548799"
DEFAULT_MAP_ZOOM: "3"
