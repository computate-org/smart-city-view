openapi: 3.0.0
info:
  title: "smart-village-view"
  version: 3.0.0
paths:

  /callback:
    get:
      operationId: callback
      x-vertx-event-bus: choice-reports-enUS-callback
      description: >+
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                type: string

  /logout:
    get:
      operationId: logout
      x-vertx-event-bus: choice-reports-enUS-logout
      description: >+
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                type: string

  /api/iot-node:
    get:
      operationId: searchIotNode
      x-vertx-event-bus: smart-village-view-enUS-IotNode
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - IOT Node
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchIotNodeResponse'
    patch:
      operationId: patchIotNode
      x-vertx-event-bus: smart-village-view-enUS-IotNode
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - IOT Node
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHIotNodeRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHIotNodeResponse'
    post:
      operationId: postIotNode
      x-vertx-event-bus: smart-village-view-enUS-IotNode
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - IOT Node
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTIotNodeRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTIotNodeResponse'
  /api/iot-node-import:
    put:
      operationId: putimportIotNode
      x-vertx-event-bus: smart-village-view-enUS-IotNode
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - IOT Node
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportIotNodeRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportIotNodeResponse'
  /api/iot-node/{id}:
    get:
      operationId: getIotNode
      x-vertx-event-bus: smart-village-view-enUS-IotNode
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - IOT Node
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETIotNodeResponse'
  /iot-node/{id}:
    get:
      operationId: searchpageIotNodeId
      x-vertx-event-bus: smart-village-view-enUS-IotNode
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - IOT Node
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageIotNodeResponse'
  /iot-node:
    get:
      operationId: searchpageIotNode
      x-vertx-event-bus: smart-village-view-enUS-IotNode
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - IOT Node
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageIotNodeResponse'
  /api/user:
    get:
      operationId: searchSiteUser
      x-vertx-event-bus: smart-village-view-enUS-SiteUser
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchSiteUserResponse'
    patch:
      operationId: patchSiteUser
      x-vertx-event-bus: smart-village-view-enUS-SiteUser
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHSiteUserRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHSiteUserResponse'
    post:
      operationId: postSiteUser
      x-vertx-event-bus: smart-village-view-enUS-SiteUser
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - User
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTSiteUserRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTSiteUserResponse'
  /api/user-import:
    put:
      operationId: putimportSiteUser
      x-vertx-event-bus: smart-village-view-enUS-SiteUser
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportSiteUserRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportSiteUserResponse'
  /user/{id}:
    get:
      operationId: searchpageSiteUserId
      x-vertx-event-bus: smart-village-view-enUS-SiteUser
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageSiteUserResponse'
  /user:
    get:
      operationId: searchpageSiteUser
      x-vertx-event-bus: smart-village-view-enUS-SiteUser
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageSiteUserResponse'
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    openIdConnect:
      type: openIdConnect
      openIdConnectUrl: https://sso.computate.org/auth/realms/RH-IMPACT/.well-known/openid-configuration
  requestBodies:
    SearchIotNodeResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchIotNodeResponse'
    PATCHIotNodeRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHIotNodeRequest'
    PATCHIotNodeResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHIotNodeResponse'
    POSTIotNodeRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTIotNodeRequest'
    POSTIotNodeResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTIotNodeResponse'
    PUTImportIotNodeRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportIotNodeRequest'
    PUTImportIotNodeResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportIotNodeResponse'
    GETIotNodeResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETIotNodeResponse'
    SearchPageIotNodeResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageIotNodeResponse'
    SearchSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchSiteUserResponse'
    PATCHSiteUserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHSiteUserRequest'
    PATCHSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHSiteUserResponse'
    POSTSiteUserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTSiteUserRequest'
    POSTSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTSiteUserResponse'
    PUTImportSiteUserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportSiteUserRequest'
    PUTImportSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportSiteUserResponse'
    SearchPageSiteUserResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageSiteUserResponse'
  schemas:
    SearchIotNodeResponse:
      allOf:
        - type: array
          items:
            type: object
            properties:
              json:
                type: object
              nodeName:
                type: string
              nodeType:
                type: string
              nodeId:
                type: string
              location:
                type: string
    PATCHIotNodeRequest:
      allOf:
        - type: object
          properties:
            setJson:
              type: object
              nullable: true
            removeJson:
              type: object
            removeAllJson:
              type: object
            setNodeName:
              type: string
              nullable: true
            removeNodeName:
              type: string
            removeAllNodeName:
              type: string
            setNodeType:
              type: string
              nullable: true
            removeNodeType:
              type: string
            removeAllNodeType:
              type: string
            setNodeId:
              type: string
              nullable: true
            removeNodeId:
              type: string
            removeAllNodeId:
              type: string
            setLocation:
              type: string
              nullable: true
            removeLocation:
              type: string
            removeAllLocation:
              type: string
    PATCHIotNodeResponse:
      allOf:
        - type: object
          properties:
            setJson:
              type: object
              nullable: true
            removeJson:
              type: object
            removeAllJson:
              type: object
            setNodeName:
              type: string
              nullable: true
            removeNodeName:
              type: string
            removeAllNodeName:
              type: string
            setNodeType:
              type: string
              nullable: true
            removeNodeType:
              type: string
            removeAllNodeType:
              type: string
            setNodeId:
              type: string
              nullable: true
            removeNodeId:
              type: string
            removeAllNodeId:
              type: string
            setLocation:
              type: string
              nullable: true
            removeLocation:
              type: string
            removeAllLocation:
              type: string
    POSTIotNodeRequest:
      allOf:
        - type: object
          properties:
            json:
              type: object
            nodeName:
              type: string
            nodeType:
              type: string
            nodeId:
              type: string
            location:
              type: string
    POSTIotNodeResponse:
      allOf:
        - type: object
          properties:
            json:
              type: object
            nodeName:
              type: string
            nodeType:
              type: string
            nodeId:
              type: string
            location:
              type: string
    PUTImportIotNodeRequest:
      allOf:
        - type: object
          properties:
            json:
              type: object
            nodeName:
              type: string
            nodeType:
              type: string
            nodeId:
              type: string
            location:
              type: string
    PUTImportIotNodeResponse:
      allOf:
        - type: object
          properties:
            json:
              type: object
            nodeName:
              type: string
            nodeType:
              type: string
            nodeId:
              type: string
            location:
              type: string
    GETIotNodeResponse:
      allOf:
        - type: object
          properties:
            json:
              type: object
            nodeName:
              type: string
            nodeType:
              type: string
            nodeId:
              type: string
            location:
              type: string
    SearchPageIotNodeResponse:
      allOf:
        - type: string
    SearchSiteUserResponse:
      allOf:
        - type: array
          items:
            type: object
            properties:
              userKeys:
                type: array
                items:
                  type: string
              userId:
                type: string
              userName:
                type: string
              userEmail:
                type: string
              userFirstName:
                type: string
              userLastName:
                type: string
              userFullName:
                type: string
              seeArchived:
                type: boolean
              seeDeleted:
                type: boolean
    PATCHSiteUserRequest:
      allOf:
        - type: object
          properties:
            setUserKeys:
              type: array
              nullable: true
              items:
                type: string
            removeUserKeys:
              type: string
            removeAllUserKeys:
              type: array
              items:
                type: string
            addUserKeys:
              type: string
            addAllUserKeys:
              type: array
              items:
                type: string
            setUserId:
              type: string
              nullable: true
            removeUserId:
              type: string
            removeAllUserId:
              type: string
            setUserName:
              type: string
              nullable: true
            removeUserName:
              type: string
            removeAllUserName:
              type: string
            setUserEmail:
              type: string
              nullable: true
            removeUserEmail:
              type: string
            removeAllUserEmail:
              type: string
            setUserFirstName:
              type: string
              nullable: true
            removeUserFirstName:
              type: string
            removeAllUserFirstName:
              type: string
            setUserLastName:
              type: string
              nullable: true
            removeUserLastName:
              type: string
            removeAllUserLastName:
              type: string
            setUserFullName:
              type: string
              nullable: true
            removeUserFullName:
              type: string
            removeAllUserFullName:
              type: string
            setSeeArchived:
              type: boolean
              nullable: true
            removeSeeArchived:
              type: boolean
            removeAllSeeArchived:
              type: boolean
            setSeeDeleted:
              type: boolean
              nullable: true
            removeSeeDeleted:
              type: boolean
            removeAllSeeDeleted:
              type: boolean
    PATCHSiteUserResponse:
      allOf:
        - type: object
          properties:
            setUserKeys:
              type: array
              nullable: true
              items:
                type: string
            removeUserKeys:
              type: string
            removeAllUserKeys:
              type: array
              items:
                type: string
            addUserKeys:
              type: string
            addAllUserKeys:
              type: array
              items:
                type: string
            setUserId:
              type: string
              nullable: true
            removeUserId:
              type: string
            removeAllUserId:
              type: string
            setUserName:
              type: string
              nullable: true
            removeUserName:
              type: string
            removeAllUserName:
              type: string
            setUserEmail:
              type: string
              nullable: true
            removeUserEmail:
              type: string
            removeAllUserEmail:
              type: string
            setUserFirstName:
              type: string
              nullable: true
            removeUserFirstName:
              type: string
            removeAllUserFirstName:
              type: string
            setUserLastName:
              type: string
              nullable: true
            removeUserLastName:
              type: string
            removeAllUserLastName:
              type: string
            setUserFullName:
              type: string
              nullable: true
            removeUserFullName:
              type: string
            removeAllUserFullName:
              type: string
            setSeeArchived:
              type: boolean
              nullable: true
            removeSeeArchived:
              type: boolean
            removeAllSeeArchived:
              type: boolean
            setSeeDeleted:
              type: boolean
              nullable: true
            removeSeeDeleted:
              type: boolean
            removeAllSeeDeleted:
              type: boolean
    POSTSiteUserRequest:
      allOf:
        - type: object
          properties:
            userKeys:
              type: array
              items:
                type: string
            userId:
              type: string
            userName:
              type: string
            userEmail:
              type: string
            userFirstName:
              type: string
            userLastName:
              type: string
            userFullName:
              type: string
            seeArchived:
              type: boolean
            seeDeleted:
              type: boolean
    POSTSiteUserResponse:
      allOf:
        - type: object
          properties:
            userKeys:
              type: array
              items:
                type: string
            userId:
              type: string
            userName:
              type: string
            userEmail:
              type: string
            userFirstName:
              type: string
            userLastName:
              type: string
            userFullName:
              type: string
            seeArchived:
              type: boolean
            seeDeleted:
              type: boolean
    PUTImportSiteUserRequest:
      allOf:
        - type: object
          properties:
            userKeys:
              type: array
              items:
                type: string
            userId:
              type: string
            userName:
              type: string
            userEmail:
              type: string
            userFirstName:
              type: string
            userLastName:
              type: string
            userFullName:
              type: string
            seeArchived:
              type: boolean
            seeDeleted:
              type: boolean
    PUTImportSiteUserResponse:
      allOf:
        - type: object
          properties:
            userKeys:
              type: array
              items:
                type: string
            userId:
              type: string
            userName:
              type: string
            userEmail:
              type: string
            userFirstName:
              type: string
            userLastName:
              type: string
            userFullName:
              type: string
            seeArchived:
              type: boolean
            seeDeleted:
              type: boolean
    SearchPageSiteUserResponse:
      allOf:
        - type: string
